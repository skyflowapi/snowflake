// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.24.4
// source: detokenize.proto

package __

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Redaction type. Subject to policies assigned to the API caller. When used for detokenization, only supported for vaults that support [column groups](/tokenization-column-groups/).
type RedactionEnum_REDACTION int32

const (
	RedactionEnum_DEFAULT    RedactionEnum_REDACTION = 0
	RedactionEnum_REDACTED   RedactionEnum_REDACTION = 1
	RedactionEnum_MASKED     RedactionEnum_REDACTION = 2
	RedactionEnum_PLAIN_TEXT RedactionEnum_REDACTION = 3
)

// Enum value maps for RedactionEnum_REDACTION.
var (
	RedactionEnum_REDACTION_name = map[int32]string{
		0: "DEFAULT",
		1: "REDACTED",
		2: "MASKED",
		3: "PLAIN_TEXT",
	}
	RedactionEnum_REDACTION_value = map[string]int32{
		"DEFAULT":    0,
		"REDACTED":   1,
		"MASKED":     2,
		"PLAIN_TEXT": 3,
	}
)

func (x RedactionEnum_REDACTION) Enum() *RedactionEnum_REDACTION {
	p := new(RedactionEnum_REDACTION)
	*p = x
	return p
}

func (x RedactionEnum_REDACTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedactionEnum_REDACTION) Descriptor() protoreflect.EnumDescriptor {
	return file_detokenize_proto_enumTypes[0].Descriptor()
}

func (RedactionEnum_REDACTION) Type() protoreflect.EnumType {
	return &file_detokenize_proto_enumTypes[0]
}

func (x RedactionEnum_REDACTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedactionEnum_REDACTION.Descriptor instead.
func (RedactionEnum_REDACTION) EnumDescriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{0, 0}
}

type DetokenizeRecordResponse_ValueType int32

const (
	DetokenizeRecordResponse_NONE     DetokenizeRecordResponse_ValueType = 0
	DetokenizeRecordResponse_STRING   DetokenizeRecordResponse_ValueType = 1
	DetokenizeRecordResponse_INTEGER  DetokenizeRecordResponse_ValueType = 2
	DetokenizeRecordResponse_FLOAT    DetokenizeRecordResponse_ValueType = 3
	DetokenizeRecordResponse_BOOL     DetokenizeRecordResponse_ValueType = 4
	DetokenizeRecordResponse_DATETIME DetokenizeRecordResponse_ValueType = 5
	DetokenizeRecordResponse_JSON     DetokenizeRecordResponse_ValueType = 6
	DetokenizeRecordResponse_ARRAY    DetokenizeRecordResponse_ValueType = 7
	DetokenizeRecordResponse_DATE     DetokenizeRecordResponse_ValueType = 8
	DetokenizeRecordResponse_TIME     DetokenizeRecordResponse_ValueType = 9
)

// Enum value maps for DetokenizeRecordResponse_ValueType.
var (
	DetokenizeRecordResponse_ValueType_name = map[int32]string{
		0: "NONE",
		1: "STRING",
		2: "INTEGER",
		3: "FLOAT",
		4: "BOOL",
		5: "DATETIME",
		6: "JSON",
		7: "ARRAY",
		8: "DATE",
		9: "TIME",
	}
	DetokenizeRecordResponse_ValueType_value = map[string]int32{
		"NONE":     0,
		"STRING":   1,
		"INTEGER":  2,
		"FLOAT":    3,
		"BOOL":     4,
		"DATETIME": 5,
		"JSON":     6,
		"ARRAY":    7,
		"DATE":     8,
		"TIME":     9,
	}
)

func (x DetokenizeRecordResponse_ValueType) Enum() *DetokenizeRecordResponse_ValueType {
	p := new(DetokenizeRecordResponse_ValueType)
	*p = x
	return p
}

func (x DetokenizeRecordResponse_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetokenizeRecordResponse_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_detokenize_proto_enumTypes[1].Descriptor()
}

func (DetokenizeRecordResponse_ValueType) Type() protoreflect.EnumType {
	return &file_detokenize_proto_enumTypes[1]
}

func (x DetokenizeRecordResponse_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetokenizeRecordResponse_ValueType.Descriptor instead.
func (DetokenizeRecordResponse_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{5, 0}
}

type RedactionEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedactionEnum) Reset() {
	*x = RedactionEnum{}
	mi := &file_detokenize_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedactionEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedactionEnum) ProtoMessage() {}

func (x *RedactionEnum) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedactionEnum.ProtoReflect.Descriptor instead.
func (*RedactionEnum) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{0}
}

type DetokenizeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VaultID           string                 `protobuf:"bytes,1,opt,name=vaultID,proto3" json:"vaultID,omitempty"`
	DetokenizePayload *DetokenizePayload     `protobuf:"bytes,2,opt,name=detokenizePayload,proto3" json:"detokenizePayload,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DetokenizeRequest) Reset() {
	*x = DetokenizeRequest{}
	mi := &file_detokenize_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeRequest) ProtoMessage() {}

func (x *DetokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeRequest.ProtoReflect.Descriptor instead.
func (*DetokenizeRequest) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{1}
}

func (x *DetokenizeRequest) GetVaultID() string {
	if x != nil {
		return x.VaultID
	}
	return ""
}

func (x *DetokenizeRequest) GetDetokenizePayload() *DetokenizePayload {
	if x != nil {
		return x.DetokenizePayload
	}
	return nil
}

type DetokenizePayload struct {
	state                    protoimpl.MessageState     `protogen:"open.v1"`
	DetokenizationParameters []*DetokenizeRecordRequest `protobuf:"bytes,1,rep,name=detokenizationParameters,proto3" json:"detokenizationParameters,omitempty"`
	DownloadURL              bool                       `protobuf:"varint,2,opt,name=downloadURL,proto3" json:"downloadURL,omitempty"`
	ContinueOnError          bool                       `protobuf:"varint,3,opt,name=continueOnError,proto3" json:"continueOnError,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DetokenizePayload) Reset() {
	*x = DetokenizePayload{}
	mi := &file_detokenize_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizePayload) ProtoMessage() {}

func (x *DetokenizePayload) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizePayload.ProtoReflect.Descriptor instead.
func (*DetokenizePayload) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{2}
}

func (x *DetokenizePayload) GetDetokenizationParameters() []*DetokenizeRecordRequest {
	if x != nil {
		return x.DetokenizationParameters
	}
	return nil
}

func (x *DetokenizePayload) GetDownloadURL() bool {
	if x != nil {
		return x.DownloadURL
	}
	return false
}

func (x *DetokenizePayload) GetContinueOnError() bool {
	if x != nil {
		return x.ContinueOnError
	}
	return false
}

type DetokenizeRecordRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Token         string                  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Redaction     RedactionEnum_REDACTION `protobuf:"varint,2,opt,name=redaction,proto3,enum=v1.RedactionEnum_REDACTION" json:"redaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetokenizeRecordRequest) Reset() {
	*x = DetokenizeRecordRequest{}
	mi := &file_detokenize_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeRecordRequest) ProtoMessage() {}

func (x *DetokenizeRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeRecordRequest.ProtoReflect.Descriptor instead.
func (*DetokenizeRecordRequest) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{3}
}

func (x *DetokenizeRecordRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DetokenizeRecordRequest) GetRedaction() RedactionEnum_REDACTION {
	if x != nil {
		return x.Redaction
	}
	return RedactionEnum_DEFAULT
}

type DetokenizeResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Records       []*DetokenizeRecordResponse `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetokenizeResponse) Reset() {
	*x = DetokenizeResponse{}
	mi := &file_detokenize_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeResponse) ProtoMessage() {}

func (x *DetokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeResponse.ProtoReflect.Descriptor instead.
func (*DetokenizeResponse) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{4}
}

func (x *DetokenizeResponse) GetRecords() []*DetokenizeRecordResponse {
	if x != nil {
		return x.Records
	}
	return nil
}

type DetokenizeRecordResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Token         string                             `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ValueType     DetokenizeRecordResponse_ValueType `protobuf:"varint,2,opt,name=valueType,proto3,enum=v1.DetokenizeRecordResponse_ValueType" json:"valueType,omitempty"`
	Value         string                             `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Error         *wrapperspb.StringValue            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetokenizeRecordResponse) Reset() {
	*x = DetokenizeRecordResponse{}
	mi := &file_detokenize_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetokenizeRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetokenizeRecordResponse) ProtoMessage() {}

func (x *DetokenizeRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_detokenize_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetokenizeRecordResponse.ProtoReflect.Descriptor instead.
func (*DetokenizeRecordResponse) Descriptor() ([]byte, []int) {
	return file_detokenize_proto_rawDescGZIP(), []int{5}
}

func (x *DetokenizeRecordResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DetokenizeRecordResponse) GetValueType() DetokenizeRecordResponse_ValueType {
	if x != nil {
		return x.ValueType
	}
	return DetokenizeRecordResponse_NONE
}

func (x *DetokenizeRecordResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DetokenizeRecordResponse) GetError() *wrapperspb.StringValue {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_detokenize_proto protoreflect.FileDescriptor

var file_detokenize_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x09, 0x52, 0x45, 0x44, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x44, 0x41, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x53, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50,
	0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x03, 0x22, 0x89, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x15, 0x92, 0x41, 0x12, 0x32, 0x10, 0x49, 0x44, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74,
	0x49, 0x44, 0x12, 0x43, 0x0a, 0x11, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x11, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa6, 0x05, 0x0a, 0x11, 0x44, 0x65, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x75, 0x0a,
	0x18, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x1c, 0x92, 0x41,
	0x19, 0x32, 0x17, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x52, 0x18, 0x64, 0x65, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0xcc, 0x01, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0xa9, 0x01, 0x92, 0x41, 0xa5,
	0x01, 0x32, 0xa2, 0x01, 0x49, 0x66, 0x20, 0x60, 0x74, 0x72, 0x75, 0x65, 0x60, 0x2c, 0x20, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x20,
	0x55, 0x52, 0x4c, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x20, 0x55, 0x52, 0x4c, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x31, 0x35, 0x20, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x76, 0x69, 0x72, 0x75, 0x73, 0x20, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x2c, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x20, 0x69, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20,
	0x63, 0x6c, 0x65, 0x61, 0x6e, 0x2e, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x52, 0x4c, 0x12, 0x7e, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x54, 0x92, 0x41,
	0x51, 0x32, 0x48, 0x49, 0x66, 0x20, 0x60, 0x74, 0x72, 0x75, 0x65, 0x60, 0x2c, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x73, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x20, 0x69, 0x66, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x20, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x73, 0x2e, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x3a, 0xca, 0x01, 0x92, 0x41, 0xc6, 0x01, 0x32, 0xc3, 0x01, 0x7b, 0x22, 0x64,
	0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x72, 0x65, 0x64, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x45,
	0x58, 0x54, 0x22, 0x2c, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x22, 0x61, 0x66, 0x62,
	0x64, 0x31, 0x30, 0x37, 0x34, 0x2d, 0x35, 0x31, 0x63, 0x31, 0x2d, 0x34, 0x61, 0x31, 0x36, 0x2d,
	0x39, 0x65, 0x65, 0x65, 0x2d, 0x65, 0x32, 0x63, 0x30, 0x65, 0x63, 0x62, 0x35, 0x32, 0x31, 0x32,
	0x35, 0x22, 0x7d, 0x2c, 0x7b, 0x22, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3a, 0x22, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x22, 0x2c, 0x22, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x3a, 0x22, 0x30, 0x35, 0x33, 0x38, 0x33, 0x34, 0x38, 0x37, 0x2d, 0x66, 0x63, 0x61,
	0x65, 0x2d, 0x34, 0x32, 0x65, 0x35, 0x2d, 0x61, 0x34, 0x38, 0x65, 0x2d, 0x35, 0x62, 0x64, 0x36,
	0x32, 0x61, 0x35, 0x31, 0x61, 0x66, 0x31, 0x32, 0x22, 0x7d, 0x5d, 0x2c, 0x22, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x22, 0x3a, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x7d,
	0x22, 0x8b, 0x02, 0x0a, 0x17, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0x92, 0x41, 0x31,
	0x32, 0x2f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65,
	0x2e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xa3, 0x01, 0x0a, 0x09, 0x72, 0x65, 0x64,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x64, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e,
	0x52, 0x45, 0x44, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x42, 0x68, 0x92, 0x41, 0x65, 0x32, 0x63,
	0x52, 0x65, 0x64, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20,
	0x74, 0x6f, 0x20, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x20, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x50, 0x49, 0x20, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x52, 0x09, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9,
	0x02, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x92, 0x41, 0x30, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2e, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x3a, 0xc5, 0x01, 0x92, 0x41, 0xc1, 0x01, 0x32, 0xbe, 0x01, 0x7b, 0x22, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x3a, 0x22, 0x61, 0x66, 0x62, 0x64, 0x31, 0x30, 0x37, 0x34, 0x2d, 0x35, 0x31, 0x63, 0x31, 0x2d,
	0x34, 0x61, 0x31, 0x36, 0x2d, 0x39, 0x65, 0x65, 0x65, 0x2d, 0x65, 0x32, 0x63, 0x30, 0x65, 0x63,
	0x62, 0x35, 0x32, 0x31, 0x32, 0x35, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a,
	0x22, 0x52, 0x6f, 0x62, 0x69, 0x6e, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3a, 0x22, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x22, 0x7d, 0x2c, 0x7b, 0x22,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x22, 0x30, 0x35, 0x33, 0x38, 0x33, 0x34, 0x38, 0x37,
	0x2d, 0x66, 0x63, 0x61, 0x65, 0x2d, 0x34, 0x32, 0x65, 0x35, 0x2d, 0x61, 0x34, 0x38, 0x65, 0x2d,
	0x35, 0x62, 0x64, 0x36, 0x32, 0x61, 0x35, 0x31, 0x61, 0x66, 0x31, 0x32, 0x22, 0x2c, 0x22, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x22, 0x2a, 0x52, 0x45, 0x44, 0x41, 0x43, 0x54, 0x45, 0x44,
	0x2a, 0x22, 0x2c, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x22, 0x7d, 0x5d, 0x7d, 0x22, 0xc0, 0x03, 0x0a, 0x18, 0x44,
	0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x64, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x44, 0x61, 0x74, 0x61, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x60, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x60, 0x2e, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0x92,
	0x41, 0x22, 0x32, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x20, 0x92, 0x41, 0x1d, 0x32, 0x1b, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x20, 0x69, 0x66, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x69, 0x73,
	0x6e, 0x27, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x7a, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49,
	0x4d, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x09, 0x42, 0x03, 0x5a,
	0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_detokenize_proto_rawDescOnce sync.Once
	file_detokenize_proto_rawDescData = file_detokenize_proto_rawDesc
)

func file_detokenize_proto_rawDescGZIP() []byte {
	file_detokenize_proto_rawDescOnce.Do(func() {
		file_detokenize_proto_rawDescData = protoimpl.X.CompressGZIP(file_detokenize_proto_rawDescData)
	})
	return file_detokenize_proto_rawDescData
}

var file_detokenize_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_detokenize_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_detokenize_proto_goTypes = []any{
	(RedactionEnum_REDACTION)(0),            // 0: v1.RedactionEnum.REDACTION
	(DetokenizeRecordResponse_ValueType)(0), // 1: v1.DetokenizeRecordResponse.ValueType
	(*RedactionEnum)(nil),                   // 2: v1.RedactionEnum
	(*DetokenizeRequest)(nil),               // 3: v1.DetokenizeRequest
	(*DetokenizePayload)(nil),               // 4: v1.DetokenizePayload
	(*DetokenizeRecordRequest)(nil),         // 5: v1.DetokenizeRecordRequest
	(*DetokenizeResponse)(nil),              // 6: v1.DetokenizeResponse
	(*DetokenizeRecordResponse)(nil),        // 7: v1.DetokenizeRecordResponse
	(*wrapperspb.StringValue)(nil),          // 8: google.protobuf.StringValue
}
var file_detokenize_proto_depIdxs = []int32{
	4, // 0: v1.DetokenizeRequest.detokenizePayload:type_name -> v1.DetokenizePayload
	5, // 1: v1.DetokenizePayload.detokenizationParameters:type_name -> v1.DetokenizeRecordRequest
	0, // 2: v1.DetokenizeRecordRequest.redaction:type_name -> v1.RedactionEnum.REDACTION
	7, // 3: v1.DetokenizeResponse.records:type_name -> v1.DetokenizeRecordResponse
	1, // 4: v1.DetokenizeRecordResponse.valueType:type_name -> v1.DetokenizeRecordResponse.ValueType
	8, // 5: v1.DetokenizeRecordResponse.error:type_name -> google.protobuf.StringValue
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_detokenize_proto_init() }
func file_detokenize_proto_init() {
	if File_detokenize_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_detokenize_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_detokenize_proto_goTypes,
		DependencyIndexes: file_detokenize_proto_depIdxs,
		EnumInfos:         file_detokenize_proto_enumTypes,
		MessageInfos:      file_detokenize_proto_msgTypes,
	}.Build()
	File_detokenize_proto = out.File
	file_detokenize_proto_rawDesc = nil
	file_detokenize_proto_goTypes = nil
	file_detokenize_proto_depIdxs = nil
}
